@document.meta
updated: 2023-09-05
version: 1.1.1
title: README
description: Dev Templates notes, by bloatware (tm) afficianado
authors: strange_cofunctor
categories: table: 0x7f622707a340
created: 2023-09-03
id: 1b3100e7-921c-484e-89d5-9ccc9874ed77
@end
* Dev Tempates::
** goDev::
   Using Gomod2nix and devshells
** pythonDev::
   Using Poetry2nix, flake-parts and devshells
** haskellDev::
   Using flake-parts and haskell-flake.
** TypstDev::
   Typst has a retardation problem. It tries to fetches the import from a `typst.packages` url. However, we are running this in a sandboxed env, which I don't plan on changing antime soon. We avoid this by literally creating a Link farm for usage. The Idea is to create a structure like so::
   $ Link-Farm Example::
   @code bash
   | ${typst-packs.drv}::
       | -- share
           | -- typst
               | -- templates
                   |--${dep1} -> /nix/store/<hash>-typst-packages/packages/preview/${dep1}/${dep1_ver}
                   `-- ${dep2} -> /nix/store/<hash>-typst-packages/packages/preview/${dep2}/${dep2_ver}
   @end
   To do such, we need to filter the root directory of typst-packages, and only grab elements within the folder which match our query. The root directory of typst-packages from its git url is like so::
   @code bash
   | ${typst_pack-source.drv} -> /nix/store/<hash_tps>-typst/packages
       | -- preview -> /nix/store/<hash_tps>-typst/packages/preview
           | -- packages -> /nix/store/<hash_tps>-typst/packages/preview/packages
               | -- dep1 -> /nix/store/<hash_tps>-typst/packages/preview/packages/deps1
               | -- dep2 -> /nix/store/<hash_tps>-typst/packages/preview/packages/deps2
               | -- dep3 -> /nix/store/<hash_tps>-typst/packages/preview/packages/deps3
   @end
*** Solutions::
    A combo of user inputs and `builtins.listToAttrs`, IDK why this though completely alluded me. Now I thing I just wasted effort in this, but it was so stupdily easy %OFC, my idiot self thought this was a graph-theory problem, fml%
